diff --git a/src/libratbag-data.c b/src/libratbag-data.c
index cd0f53e..fae07e3 100644
--- a/src/libratbag-data.c
+++ b/src/libratbag-data.c
@@ -617,7 +617,7 @@ file_data_matches(struct ratbag *ratbag,
 
 	match_strv = g_key_file_get_string_list(keyfile, GROUP_DEVICE, "DeviceMatch", NULL, NULL);
 	if (!match_strv) {
-		log_error(ratbag, "Missing DeviceMatch in %s\n", basename(path));
+		log_error(ratbag, "Missing DeviceMatch in %s\n", g_basename(path));
 		return false;
 	}
 
@@ -633,7 +633,7 @@ file_data_matches(struct ratbag *ratbag,
 
 	data->driver = g_key_file_get_string(keyfile, GROUP_DEVICE, "Driver", NULL);
 	if (!data->driver) {
-		log_error(ratbag, "Missing Driver in %s\n", basename(path));
+		log_error(ratbag, "Missing Driver in %s\n", g_basename(path));
 		return false;
 	} else {
 		const struct driver_map *map;
@@ -650,14 +650,14 @@ file_data_matches(struct ratbag *ratbag,
 
 		if (data->drivertype == NONE) {
 			log_error(ratbag, "Unknown driver %s in %s\n",
-				  data->driver, basename(path));
+				  data->driver, g_basename(path));
 			return false;
 		}
 	}
 
 	devicetype = g_key_file_get_string(keyfile, GROUP_DEVICE, "DeviceType", NULL);
 	if (devicetype == NULL) {
-		log_error(ratbag, "No DeviceType found in '%s'\n", basename(path));
+		log_error(ratbag, "No DeviceType found in '%s'\n", g_basename(path));
 		data->devicetype = TYPE_UNSPECIFIED;
 		return false;
 	}
@@ -668,7 +668,7 @@ file_data_matches(struct ratbag *ratbag,
 	} else if (streq(devicetype, "other")) {
 		data->devicetype = TYPE_OTHER;
 	} else {
-		log_error(ratbag, "Invalid DeviceType '%s' in '%s'\n", devicetype, basename(path));
+		log_error(ratbag, "Invalid DeviceType '%s' in '%s'\n", devicetype, g_basename(path));
 		data->devicetype = TYPE_UNSPECIFIED;
 		return false;
 	}
